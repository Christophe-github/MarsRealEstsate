<resources>

    <!--    Themes are in themes.xml-->

    <style name="MyStyle"/>
    <style name="MyStyle.Widgets"/>


    <style name="MyStyle.Widgets.Toolbar.Default" parent="Widget.MaterialComponents.Toolbar">
        <item name="titleTextAppearance">?textAppearanceToolbarTitle</item>
        <item name="titleTextColor">?colorOnPrimary</item>
        <item name="android:background">?colorPrimary</item>
        <item name="popupTheme">@style/AppTheme.PopupTheme</item>
    </style>


    <style name="MyStyle.Widgets.Toolbar.ImageToolbar" parent="Widget.MaterialComponents.Toolbar">
        <item name="android:background">@android:color/transparent</item>
        <item name="popupTheme">@style/AppTheme.PopupTheme</item>
    </style>


    <style name="MyStyle.Widgets.Chip" parent="Widget.MaterialComponents.Chip.Action">
        <item name="chipBackgroundColor">?colorChipBackground</item>
        <item name="android:textColor">?colorChipText</item>
        <item name="shapeAppearanceOverlay">@style/MyStyle.ShapeAppearance.Chip</item>
        <item name="android:textAppearance">?textAppearanceSubtitle2</item>
    </style>

    <style name="MyStyle.Widgets.Chip.Filter" parent="Widget.MaterialComponents.Chip.Filter">
        <item name="chipBackgroundColor">?colorChipBackground</item>
        <item name="android:textColor">?colorChipText</item>
        <item name="shapeAppearanceOverlay">@style/MyStyle.ShapeAppearance.Chip</item>
        <item name="checkedIcon">@drawable/ic_check</item>
        <item name="android:textAppearance">?textAppearanceSubtitle2</item>
    </style>


    <style name="MyStyle.Widgets.SnackBar" parent="Widget.MaterialComponents.Snackbar">
        <item name="backgroundTint">?colorSnackbarBackground</item>
        <item name="actionTextColorAlpha">1</item>
        <!--The textAppearance of the Snackbar is defined by the attribute snackbarTextViewStyle,
        it can't be defined here. This attribute is set in themes_base.xml -->
    </style>



    <style name="MyStyle.Widgets.FloatingActionButton" parent="Widget.MaterialComponents.FloatingActionButton">
        <item name="shapeAppearanceOverlay">@style/MyStyle.ShapeAppearance.FloatingActionButton</item>
        <item name="rippleColor">?colorOnSecondary</item>
    </style>

    <style name="MyStyle.Widgets.FloatingActionButton.Alternative" parent="Widget.MaterialComponents.FloatingActionButton">
        <item name="rippleColor">?colorControlHighlightAlt</item>
        <item name="tint">@color/fab_icon_alt</item>
        <item name="backgroundTint">@color/fab_background_alt</item>
        <item name="fabCustomSize">50dp</item>
    </style>

    <style name="MyStyle.Widgets.ExtendedFloatingActionButton" parent="Widget.MaterialComponents.ExtendedFloatingActionButton">
        <item name="shapeAppearanceOverlay">@style/MyStyle.ShapeAppearance.ExtendedFloatingActionButton</item>
        <item name="rippleColor">?colorOnSecondary</item>
        <item name="android:textAppearance">?textAppearanceButton</item>
    </style>

    <style name="MyStyle.Widgets.TextInputLayout.Basic" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="boxStrokeColor">@color/control_textinput_activable</item>
        <item name="startIconTint">@color/control_textinput_activable</item>
        <item name="endIconTint">@color/control_textinput_activable</item>
        <item name="hintTextColor">@color/control_textinput_activable</item>
    </style>

    <style name="MyStyle.Widgets.TextInputLayout.Dropdown" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu">
        <item name="boxStrokeColor">@color/control_textinput_activable</item>
        <item name="startIconTint">@color/control_textinput_activable</item>
        <item name="endIconTint">@color/control_textinput_activable</item>
        <item name="hintTextColor">@color/control_textinput_activable</item>
    </style>

    <style name="MyStyle.Widgets.TextInputLayout.Alternative" parent="Widget.MaterialComponents.TextInputLayout.FilledBox">
        <item name="boxStrokeColor">@color/control_textinput_activable</item>
        <item name="startIconTint">@color/control_textinput_activable</item>
        <item name="endIconTint">@color/control_textinput_activable</item>
        <item name="hintTextColor">@color/control_textinput_activable</item>
<!--        <item name="boxBackgroundColor">?colorPrimaryVariant</item>-->
    </style>

    <style name="MyStyle.Widgets.TextInputLayout.Alternative.Dropdown" parent="Widget.MaterialComponents.TextInputLayout.FilledBox.ExposedDropdownMenu">
        <item name="boxStrokeColor">@color/control_activable</item>
        <item name="startIconTint">@color/control_activable</item>
        <item name="endIconTint">@color/control_activable</item>
        <item name="hintTextColor">@color/control_activable</item>
    </style>




    <style name="MyStyle.Widgets.Button" parent="Widget.MaterialComponents.Button">
        <item name="android:backgroundTint">?colorSecondary</item>
        <item name="android:textColor">?colorOnSecondary</item>
        <item name="rippleColor">?colorControlHighlight</item>
        <item name="android:stateListAnimator">@null</item>
        <item name="android:elevation">4dp</item>
        <item name="android:textAppearance">?textAppearanceButton</item>
    </style>

    <style name="MyStyle.Widgets.Button.Outlined" parent="Widget.MaterialComponents.Button.OutlinedButton">
        <item name="android:backgroundTint">?colorSurface</item>
        <item name="android:textColor">?colorSecondary</item>
        <item name="rippleColor">?colorControlHighlightAlt</item>
        <item name="strokeColor">?colorSecondary</item>
        <item name="strokeWidth">2dp</item>
        <item name="android:stateListAnimator">@null</item>
        <item name="android:elevation">4dp</item>
        <item name="android:textAppearance">?textAppearanceButton</item>
    </style>

    <style name="MyStyle.Widgets.Button.Text" parent="Widget.MaterialComponents.Button.TextButton">
        <!--        <item name="android:stateListAnimator">@null</item>-->
        <item name="elevation">2dp</item>
        <item name="android:elevation">2dp</item>

        <item name="android:backgroundTint">?colorPrimary</item>
        <item name="android:textColor">?colorOnPrimary</item>
        <item name="rippleColor">?colorControlHighlightAlt</item>
        <item name="android:textAppearance">?textAppearanceButton</item>

    </style>

    <style name="MyStyle.Widgets.Button.SnackbarButton" parent="Widget.MaterialComponents.Button.TextButton">
        <item name="android:backgroundTint">@android:color/transparent</item>
        <item name="android:elevation">0dp</item>
        <item name="android:textColor">?colorSecondaryVariant</item>
        <item name="rippleColor">?colorControlHighlightAlt</item>

    </style>



    <!--    Currently unused because NavigationView is not customizable enough-->
    <style name="MyStyle.Widgets.NavigationViewStyle" parent="Widget.Design.NavigationView">

        <!--Background material shape is done with binding adapter because
        there is no other way with basic styling-->
        <item name="theme">@style/AppTheme.NavigationViewTheme</item>
        <!--        <item name="android:background">?colorBackground</item>-->
        <item name="itemTextColor">@color/control_activable</item>
        <item name="itemIconTint">@color/control_activable</item>
        <item name="itemTextAppearance">?textAppearanceNavigationViewItem</item>
        <item name="itemShapeAppearanceOverlay">@style/MyStyle.ShapeAppearance.NavigationItemView</item>
        <item name="itemShapeInsetEnd">20dp</item>
    </style>




    <style name="MyStyle.Widgets.BottomSheetStyle" parent="Widget.MaterialComponents.BottomSheet">
        <item name="android:background">?colorSurface</item>
        <item name="shapeAppearanceOverlay">@style/MyStyle.ShapeAppearance.BottomSheet</item>
    </style>



</resources>
